#!/usr/bin/env python
# -*- coding: utf-8 -*-

import config              # main config with token
import telebot
from telebot import types  # inline types

import urllib
import socket
import time

from selenium import webdriver
from PIL import Image

bot = telebot.TeleBot(config.token)

welcome = 'üí† –Ø - –±–æ—Ç üéì '+'<b>'+'–ü–§ –ü–ì–£–ü–°'+'</b>'+' –¥–ª—è Telegram\n–ó–∞–ø—É—â–µ–Ω –≤ '+'<b>'+'—Ç–µ—Å—Ç–æ–≤–æ–º '+'</b>'+'—Ä–µ–∂–∏–º–µ ‚ùï\n\nüí† –£–º–µ—é –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å '+'<b>'+'–∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–∏'+'</b>'+' –∏ —Å–∞–º–æ '+'<b>'+'—Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ'+'</b>'+'\nüí† –î–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ üó≥ –ú–µ–Ω—é'+'\n\nü§ñ '+'<b>'+'–†–∞—Å—Å–∫–∞–∂–∏—Ç–µ –¥—Ä—É–∑—å—è–º:'+'</b>'+'\n@pfpgupsbot'+'\n\nüñ• '+'<b>'+'–û–±—Ä–∞—Ç–Ω–∞—è —Å–≤–∑—è–∑—å:'+'</b>'+'\nTelegram '+'<em>'+'+7(911) 402-31-82'+'</em>'

@bot.message_handler(commands=['start'])
def start_menu(message):
    markup = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
    markup.add('üó≥ –ú–µ–Ω—é','?')
    username = message.from_user.first_name
    msg = bot.send_message(message.chat.id, welcome, reply_markup=markup, parse_mode="HTML")

@bot.message_handler(func=lambda message: message.text == '?')   
def help(message):
    bot.send_message(message.chat.id, welcome,parse_mode="HTML")
    print('USER: ' + str(message.chat.id) + '@' + str(message.from_user.first_name) + str(message.from_user.last_name) + ' used command: HELP')
    
@bot.message_handler(func=lambda message: message.text == 'üó≥ –ú–µ–Ω—é')
def menu(message):
    markup = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
    markup.add('üöá –ò–∑–º–µ–Ω–µ–Ω–∏—è') 
    markup.add('üìí –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ')
    markup.add('üåç –°–∞–π—Ç', '?')
    username = message.from_user.first_name
    msg = bot.send_message(message.chat.id, '<b>'+'–ß–µ–º —è –º–æ–≥—É –í–∞–º –ø–æ–º–æ—á—å, ' + username + '?'+'</b>', reply_markup=markup, parse_mode="HTML")
    
@bot.message_handler(func=lambda message: message.text == 'üåç –°–∞–π—Ç')
def site(message):   
    keyboard = types.InlineKeyboardMarkup()
    url_button = types.InlineKeyboardButton(text='–ü–µ—Ä–µ–π—Ç–∏ –Ω–∞ –ü–§ –ü–ì–£–ü–°', url='http://pgups-karelia.ru/')
    keyboard.add(url_button)
    bot.send_message(message.chat.id, '–ù–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É –∏ –ø–µ—Ä–µ–π–¥–∏ –Ω–∞ '+'<b>'+'—Å–∞–π—Ç'+'</b>', reply_markup=keyboard, parse_mode="HTML")
    
@bot.message_handler(func=lambda message: message.text == '–°–æ–∑–¥–∞—Ç—å')
def create(message):
    try:
        code = urllib.request.urlopen(config.updatescript_url).getcode()
        print("{0} - {1}".format(config.updatescript_url, code))
        if (code not in [200, 301]):
            print('ERROR: {0} - {1}')
        else:
            print('UPDATESCRIPT: is in progress..')
            driver = webdriver.PhantomJS()
            driver.set_window_size(800, 600)
            driver.get(config.updatescript_url) # url changes
            driver.save_screenshot(config.chng_file)
            bot.send_message(message.chat.id, 'CREATE: DONE!')
            print('UPDATESCRIPT: success!')
            print('USER: ' + str(message.chat.id) + '@' + str(message.from_user.first_name) + str(message.from_user.last_name) + ' used command: CREATE')
    except socket.error as e:
        bot.send_message(message.chat.id, 'CREATE: ERROR!')
        print('PING ERROR: ', e)
        
@bot.message_handler(func=lambda message: message.text == '–°–æ–∑–¥–∞—Ç—å –ü–ü–ö')
def createppk(message):
    try:
        codePPK = urllib.request.urlopen(config.updatescriptPPK_url).getcode()
        print("{0} - {1}".format(config.updatescriptPPK_url, codePPK))
        if (codePPK not in [200, 301]):
            print('ERROR: {0} - {1}')
        else:
            print('UPDATESCRIPTPPK: is in progress..')
            driverPPK = webdriver.PhantomJS()
            driverPPK.set_window_size(800, 600)
            driverPPK.get(config.updatescriptPPK_url) # url changes
            driverPPK.save_screenshot(config.chngPPK_file)
            bot.send_message(message.chat.id, 'CREATE PPK: DONE!')
            print('UPDATESCRIPTPPK: success!')
            print('USER: ' + str(message.chat.id) + '@' + str(message.from_user.first_name) + str(message.from_user.last_name) + ' used command: CREATE PPK')
    except socket.error as e:
        bot.send_message(message.chat.id, 'CREATE PPK: ERROR!')
        print('PING ERROR: ', e)        
        
@bot.message_handler(func=lambda message: message.text == '–ú–Ω–µ –ø–æ—Ö—É–π' or message.text == '–º–Ω–µ –ø–æ—Ö—É–π')
def mnepoxuy(message):
    msg = bot.send_message(message.chat.id, '–ú–Ω–µ —Ç–æ–∂–µ')
    bot.register_next_step_handler(msg, roma)
def roma(message):    
    if message.text == '–ë–∞–∑–∞—Ä–∏—à—å?' or  message.text == '–±–∞–∑–∞—Ä–∏—à—å?' or message.text == '–ë–∞–∑–∞—Ä–∏—à—å' or message.text == '–±–∞–∑–∞—Ä–∏—à—å':
        bot.send_message(message.chat.id, '–ö–æ–Ω–µ—á–Ω–æ')
       
@bot.message_handler(func=lambda message: message.text == 'üöá –ò–∑–º–µ–Ω–µ–Ω–∏—è') 
def changes(message):
    chat_id = message.chat.id
    try:
        changes_im = Image.open(config.chng_file)
        (width, height) = changes_im.size
        frame = changes_im.crop((310, 696, 1008, height - 550))
        frame.save(config.chng_frame)
        changes_im1 = Image.open(config.chng_frame)
        (width_frame, height_frame) = changes_im1.size
        part1 = changes_im1.crop((0, 0, width_frame, 1231))
        part1.save(config.chng_part1)
        changes_im2 = Image.open(config.chng_frame)
        part2 = changes_im2.crop((0, 1231, width_frame, height_frame))
        part2.save(config.chng_part2)
        photo_part1 = open(config.chng_part1, 'rb')
        bot.send_photo(message.chat.id, photo_part1)
        photo_part2 = open(config.chng_part2, 'rb')
        bot.send_photo(message.chat.id, photo_part2)
        print('USER: ' + str(message.chat.id) + '@' + str(message.from_user.first_name) + str(message.from_user.last_name) + ' used command: CHANGES PF PGUPS') 
    except (OSError, IOError) as e:
        bot.send_message(message.chat.id, '–°–∞–π—Ç –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω! –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ!')
        print('ERROR:', e)
        
@bot.message_handler(func=lambda message: message.text == 'üìí –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ')  
def rasp(message):
    rasp_cust_key = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
    rasp_cust_key.add('üë∑‚Äç –ü—É—Ç–µ–≤–æ–µ —Ö–æ–∑.', 'üíª –ö–æ–º–ø.—Å–µ—Ç–∏') 
    rasp_cust_key.add('üöù –≠–ª–µ–∫—Ç—Ä–æ—Å–Ω–∞–±–∂.', 'üöÉ –û—Ä–≥.–ø–µ—Ä–µ–≤–æ–∑.')
    rasp_cust_key.add('üöÇ –¢–µ—Ö.—ç–∫—Å–ø.–ø.—Å', 'üöÑ –ê–≤—Ç. –∏ —Ç–µ–ª–µ–º–µ—Ö.')
    rasp_cust_key.add('üó≥ –ú–µ–Ω—é', '?')
    msg = bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏ '+'<b>'+'–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ'+'</b>'+' –≤ –º–µ–Ω—é:', reply_markup=rasp_cust_key, parse_mode="HTML")
    print('USER: ' + str(message.chat.id) + '@' + str(message.from_user.first_name) + str(message.from_user.last_name) + ' used command: RASPISANIE PF PGUPS')
    
@bot.message_handler(func=lambda message: message.text == 'üë∑‚Äç –ü—É—Ç–µ–≤–æ–µ —Ö–æ–∑.') 
def put(message):
    global chat_id
    #global us_first
    #global us_last 
    chat_id = message.chat.id
    #us_first = message.from_user.first_name
    #us_last = message.from_user.last_name
    kb_rasp = types.InlineKeyboardMarkup()
    kb_rasp.add(types.InlineKeyboardButton('–ü-471', callback_data='–ü-471'), types.InlineKeyboardButton('–ü-472', callback_data='–ü-472'))
    kb_rasp.add(types.InlineKeyboardButton('–ü-469', callback_data='–ü-469'), types.InlineKeyboardButton('–ü-470', callback_data='–ü-470'))
    kb_rasp.add(types.InlineKeyboardButton('–ü-468', callback_data='–ü-468'))
    msg = bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏ '+'<b>'+'–≥—Ä—É–ø–ø—É'+'</b>'+' –∏ –Ω–∞–∂–º–∏ –Ω–∞ –Ω–µ–µ:', reply_markup=kb_rasp, parse_mode="HTML")

@bot.message_handler(func=lambda message: message.text == 'üíª –ö–æ–º–ø.—Å–µ—Ç–∏') 
def vte(message):
    global chat_id
    chat_id = message.chat.id
    kb_rasp = types.InlineKeyboardMarkup()
    kb_rasp.add(types.InlineKeyboardButton('–í–¢-518', callback_data='–í–¢-518'), types.InlineKeyboardButton('–í–¢-519,520', callback_data='–í–¢-519,520'))
    kb_rasp.add(types.InlineKeyboardButton('–í–¢-516', callback_data='–í–¢-516'), types.InlineKeyboardButton('–í–¢-517', callback_data='–í–¢-517'))
    kb_rasp.add(types.InlineKeyboardButton('–í–¢-514,515', callback_data='–í–¢-514,515'))
    msg = bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏ '+'<b>'+'–≥—Ä—É–ø–ø—É'+'</b>'+' –∏ –Ω–∞–∂–º–∏ –Ω–∞ –Ω–µ–µ:', reply_markup=kb_rasp, parse_mode="HTML")

@bot.message_handler(func=lambda message: message.text == 'üöù –≠–ª–µ–∫—Ç—Ä–æ—Å–Ω–∞–±–∂.') 
def electro(message):
    global chat_id
    chat_id = message.chat.id
    kb_rasp = types.InlineKeyboardMarkup()
    kb_rasp.add(types.InlineKeyboardButton('–≠-289,291', callback_data='–≠-289,291'), types.InlineKeyboardButton('–≠-285,287', callback_data='–≠-285,287'))
    kb_rasp.add(types.InlineKeyboardButton('–≠-281,283', callback_data='–≠-281,283'), types.InlineKeyboardButton('–≠-279', callback_data='–≠-279'))
    msg = bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏ '+'<b>'+'–≥—Ä—É–ø–ø—É'+'</b>'+' –∏ –Ω–∞–∂–º–∏ –Ω–∞ –Ω–µ–µ:', reply_markup=kb_rasp, parse_mode="HTML")

@bot.message_handler(func=lambda message: message.text == 'üöÉ –û—Ä–≥.–ø–µ—Ä–µ–≤–æ–∑.') 
def dvij(message):
    global chat_id
    chat_id = message.chat.id
    kb_rasp = types.InlineKeyboardMarkup()
    kb_rasp.add(types.InlineKeyboardButton('–î-370,371', callback_data='–î-370,371'), types.InlineKeyboardButton('–î-372,373', callback_data='–î-372,373'))
    kb_rasp.add(types.InlineKeyboardButton('–î-366,367', callback_data='–î-366,367'), types.InlineKeyboardButton('–î-368,369', callback_data='–î-368,369'))
    kb_rasp.add(types.InlineKeyboardButton('–î-364,365', callback_data='–î-364,365'))
    msg = bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏ '+'<b>'+'–≥—Ä—É–ø–ø—É'+'</b>'+' –∏ –Ω–∞–∂–º–∏ –Ω–∞ –Ω–µ–µ:', reply_markup=kb_rasp, parse_mode="HTML")

@bot.message_handler(func=lambda message: message.text == 'üöÇ –¢–µ—Ö.—ç–∫—Å–ø.–ø.—Å') 
def teh(message):
    global chat_id
    chat_id = message.chat.id
    kb_rasp = types.InlineKeyboardMarkup()
    kb_rasp.add(types.InlineKeyboardButton('–¢-182', callback_data='–¢-182'), types.InlineKeyboardButton('–¢-184', callback_data='–¢-184'))
    kb_rasp.add(types.InlineKeyboardButton('–¢-178,180', callback_data='–¢-178,180'), types.InlineKeyboardButton('–í-183,185', callback_data='–í-183,185'))
    kb_rasp.add(types.InlineKeyboardButton('–í-179,181', callback_data='–í-179,181'), types.InlineKeyboardButton('–í-177', callback_data='–í-177'))
    msg = bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏ '+'<b>'+'–≥—Ä—É–ø–ø—É'+'</b>'+' –∏ –Ω–∞–∂–º–∏ –Ω–∞ –Ω–µ–µ:', reply_markup=kb_rasp, parse_mode="HTML")

@bot.message_handler(func=lambda message: message.text == 'üöÑ –ê–≤—Ç. –∏ —Ç–µ–ª–µ–º–µ—Ö.') 
def automat(message):
    global chat_id
    chat_id = message.chat.id
    kb_rasp = types.InlineKeyboardMarkup()
    kb_rasp.add(types.InlineKeyboardButton('–®-288,290', callback_data='–®-288,290'), types.InlineKeyboardButton('–®-280,282', callback_data='1'))
    kb_rasp.add(types.InlineKeyboardButton('–®-284,286', callback_data='–®-284,286'))
    msg = bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏ '+'<b>'+'–≥—Ä—É–ø–ø—É'+'</b>'+' –∏ –Ω–∞–∂–º–∏ –Ω–∞ –Ω–µ–µ:', reply_markup=kb_rasp, parse_mode="HTML")    
    
@bot.callback_query_handler(func=lambda data_rasp: True)
def inline(data_rasp):
    if data_rasp.data == '–ü-471':
        photo_rasp = open('p-471.png', 'rb')
        bot.send_photo(chat_id, photo_rasp)
    elif data_rasp.data == '–ü-472':
        photo_rasp = open('p-472.png', 'rb')
        bot.send_photo(chat_id, photo_rasp)
        pass
    elif data_rasp.data == '–ü-469':
        photo_rasp = open('p-469.png', 'rb')
        bot.send_photo(chat_id, photo_rasp)
        pass
    elif data_rasp.data == '–ü-470':
        photo_rasp = open('p-470.png', 'rb')
        bot.send_photo(chat_id, photo_rasp)
        pass
    elif data_rasp.data == '–ü-468':
        photo_rasp = open('p-468.png', 'rb')
        bot.send_photo(chat_id, photo_rasp)
        pass
    elif data_rasp.data == '–í–¢-518':
        photo_rasp = open('vt-518.png', 'rb')
        bot.send_photo(chat_id, photo_rasp)      
        pass
    elif data_rasp.data == '–í–¢-519,520':
        photo_rasp = open('vt-519.png', 'rb')
        bot.send_photo(chat_id, photo_rasp)        
        pass
    elif data_rasp.data == '–í–¢-516':
        photo_rasp = open('vt-516.png', 'rb')
        bot.send_photo(chat_id, photo_rasp)        
        pass
    elif data_rasp.data == '–í–¢-517':
        photo_rasp = open('vt-517.png', 'rb')
        bot.send_photo(chat_id, photo_rasp)       
        pass
    elif data_rasp.data == '–í–¢-514,515':
        photo_rasp = open('vt-514.png', 'rb')
        bot.send_photo(chat_id, photo_rasp)        
        pass
    elif data_rasp.data == '–≠-289,291':
        photo_rasp = open('e-289.png', 'rb')
        bot.send_photo(chat_id, photo_rasp)        
        pass
    elif data_rasp.data == '–≠-285,287':
        photo_rasp = open('e-285.png', 'rb')
        bot.send_photo(chat_id, photo_rasp)      
        pass
    elif data_rasp.data == '–≠-281,283':
        photo_rasp = open('e-281.png', 'rb')
        bot.send_photo(chat_id, photo_rasp)       
        pass
    elif data_rasp.data == '–≠-279':
        photo_rasp = open('e-279.png', 'rb')
        bot.send_photo(chat_id, photo_rasp)       
        pass
    elif data_rasp.data == '–î-370,371':
        photo_rasp = open('d-370.png', 'rb')
        bot.send_photo(chat_id, photo_rasp)       
        pass
    elif data_rasp.data == '–î-372,373':
        photo_rasp = open('d-372.png', 'rb')
        bot.send_photo(chat_id, photo_rasp)        
        pass
    elif data_rasp.data == '–î-366,367':
        photo_rasp = open('d-366.png', 'rb')
        bot.send_photo(chat_id, photo_rasp)      
        pass
    elif data_rasp.data == '–î-368,369':
        photo_rasp = open('d-368.png', 'rb')
        bot.send_photo(chat_id, photo_rasp)       
        pass
    elif data_rasp.data == '–î-364,365':
        photo_rasp = open('d-364.png', 'rb')
        bot.send_photo(chat_id, photo_rasp)     
        pass
    elif data_rasp.data == '–¢-182':
        photo_rasp = open('t-182.png', 'rb')
        bot.send_photo(chat_id, photo_rasp) 
        pass
    elif data_rasp.data == '–¢-184':
        photo_rasp = open('t-184.png', 'rb')
        bot.send_photo(chat_id, photo_rasp)        
        pass
    elif data_rasp.data == '–¢-178,180':
        photo_rasp = open('t-178.png', 'rb')
        bot.send_photo(chat_id, photo_rasp)
        pass
    elif data_rasp.data == '–í-183,185':
        photo_rasp = open('v-183.png', 'rb')
        bot.send_photo(chat_id, photo_rasp)       
        pass
    elif data_rasp.data == '–í-179,181':
        photo_rasp = open('v-179.png', 'rb')
        bot.send_photo(chat_id, photo_rasp)
        pass
    elif data_rasp.data == '–í-177':
        photo_rasp = open('v-177.png', 'rb')
        bot.send_photo(chat_id, photo_rasp)
        pass
    elif data_rasp.data == '–®-288,290':
        photo_rasp = open('sh-288.png', 'rb')
        bot.send_photo(chat_id, photo_rasp)        
        pass
    elif data_rasp.data == '–®-280,282':
        photo_rasp = open('sh-280.png', 'rb')
        bot.send_photo(chat_id, photo_rasp)     
        pass
    elif data_rasp.data == '–®-284,286':
        photo_rasp = open('sh-284.png', 'rb')
        bot.send_photo(chat_id, photo_rasp)
        pass
        
if __name__ == '__main__':
    bot.polling(none_stop=True)


